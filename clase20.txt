"dependencies": {
    "express": "^4.18.2",
    "express-handlebars": "^7.1.2",
    "express-session": "^1.17.3",
    "mongoose": "^8.1.1",
    "passport": "^0.7.0",
    "passport-github2": "^0.1.12"
  }

/////////////////////////
import express from 'express';
import __dirname from './utils.js';
import handlebars from 'express-handlebars';
import session from 'express-session';
//import sessionRouter from './routers/session.router.js';
import mongoose from 'mongoose';
import passport from 'passport';
import initializePassport from './config/passport.config.js';
import router from './routes/views.router.js';

const app = express();

app.listen(8080, () => console.log('en el aire'));
app.use(express.static(__dirname + '/public'));

app.engine('handlebars', handlebars.engine());
app.set('views', __dirname + '/views');
app.set('view engine', 'handlebars');

mongoose.connect("mongodb+srv://claveycontrasenia@integrador-e-commerce.2igzkgv.mongodb.net/?retryWrites=true&w=majority");

app.use(express.json());
app.use(express.urlencoded({ extended: true }));

initializePassport();
app.use(session({

    secret: 'CoderSecrets',
    resave: false,
    saveUninitialized: false
}));

app.use(passport.initialize());

app.use('/api/sessions', router);
/////////////
import { Router } from 'express';
import passport from 'passport';

const router = Router();

router.get('/', async (req, res) => {
    res.render('home', { user: req.session.user });
});

router.get('/login', async (req, res) => {
    res.render('login');
})

router.get('/github', passport.authenticate('github', { scope: ['user:email'] }), async (req, res) => {
    res.render('home');
});

router.get('/githubcallback', passport.authenticate('github', { failureRedirect: '/login' }), async (req, res) => {

    req.session.user = req.user;
    console.log('session ', req.session.user);
    res.render('home', { user: req.session.user });
});


export default router;
///////////////////////////////////////////
import passport from "passport";
import GitHubStrategy from 'passport-github2';
import UserDB from "../DAO/userManager/userDB.js";

const userDB = new UserDB();
const initializePassport = () => {

    passport.use("github", new GitHubStrategy({
        clientID: "",
        clientSecret: "",
        callbackURL: ""
    }, async (accessToken, refreshToken, profile, done) => {
        try {
            console.log(profile);
            let user = await userDB.findEmail(profile._json.email);
            if (!user) {
                console.log(profile);
                let newUser = {
                    first_name: profile._json.name,
                    last_name: "pig",
                    age: 18,
                    email: profile._json.email,
                    password: ""
                }
                let result = await userDB.createOne(newUser);
                done(null, result);
            }
            else {
                done(null, user);
            }
        } catch (error) {
            return done(error);
        }
    }));
    passport.serializeUser((user, done) => {
        done(null, user._id);
    });
    passport.deserializeUser(async (id, done) => {
        let user = await userDB.getOne(id);
        done(null, user);
    });
}
export default initializePassport;
/////////////////////////
<div>
  <a href="/api/sessions/github">
    <button>Entrar con Github</button>
  </a>
</div>
